[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Sunset Sea",
    "section": "",
    "text": "Sunset Sea\nWelcome to Sunset Sea."
  },
  {
    "objectID": "dm.html",
    "href": "dm.html",
    "title": "the digital market",
    "section": "",
    "text": "[Blerb about the DE]"
  },
  {
    "objectID": "dm.html#introduction",
    "href": "dm.html#introduction",
    "title": "the digital market",
    "section": "Introduction",
    "text": "Introduction\n\n\nShow the code\nlibrary(dygraphs)\ndygraph(nhtemp, main = \"Place Holdern Graph\") %&gt;% \n  dyRangeSelector(dateWindow = c(\"1920-01-01\", \"1960-01-01\"))"
  },
  {
    "objectID": "viz_drafts.html",
    "href": "viz_drafts.html",
    "title": "Data Explore",
    "section": "",
    "text": "[BLAH BLAH BLAH]\n\n\nShow the code\nlibrary(treemap) # create a basic treemap\nlibrary(d3treeR) # html tree mao\nlibrary(htmlwidgets)\nlibrary(plotly) # dynamic graphs\nlibrary(tidyverse) # data wrangling\nlibrary(readxl) # file reading\n\n\n# import data\nDE22 &lt;- read_excel(\"docs/DE22.xlsx\")\n\n# wrangle the data\nDE22 &lt;-  DE22 %&gt;% \n  mutate(Value = as.numeric(Value))\n\n\nde_palette0&lt;- c(\n  \"#F279B2\", # eCommerce\n  \"#C2D987\", #infrastructure \n  \"#084C97\")  # Printed digital serivces\n\n\nde_palette &lt;- c(\n  \"Digital Economy\" = \"#555555\",\n  \"Priced Digital Services\" = \"#084c97\",\n  \"Infrastructure\" = \"#DBE55F\",\n  \"E-Commerce\" = \"#FF2f88\",\n  \"Federal Nondefense Digital Services\" = \"#F66A4E\")\n\n\n# there is probably a better way to do this, but automation was failing me\nde_palette1 &lt;- c(\n  \"Professional and business services\" = \"#78C2AD\",\n  \"Administrative and waste management services\" = \"#78C2AD\",\n  \"Computer systems design and related services\" = \"#78C2AD\",\n  \"Miscellaneous professional, scientific, and technical services\" = \"#78C2AD\",\n  \"Educational services, health care, and social assistance\" = \"#78C2AD\",\n  \"Educational services\" = \"#78C2AD\",\n  \"Management of companies and enterprises\" = \"#78C2AD\",\n  \"Finance, insurance, real estate, rental, and leasing\" = \"#5E77AA\",\n  \"Information\" = \"#FF2f88\",\n  \"Broadcasting and telecommunications\" = \"#FF2f88\",\n  \"Data processing, internet publishing, and other information services\" = \"#FF2f88\",\n  \"Publishing industries, except internet (includes software)\" = \"#FF2f88\",\n  \"Motion picture and sound recording industries\" = \"#FF2f88\",\n  \"Transportation and warehousing\" = \"#F279B2\",\n  \"Wholesale trade\" = \"#DBE55F\",\n  \"Manufacturing\" = \"#F66A4E\",\n  \"Computer and electronic products\" = \"#F66A4E\",\n  \"Other durable goods\" = \"#F66A4E\",\n  \"Nondurable goods\"= \"#F66A4E\",\n  \"Retail Trade\" = \"#084c97\",\n  \"Other retail\" = \"#084c97\",\n  \"Food and beverage stores\" = \"#084c97\",\n  \"Motor vehicle and parts dealers\" = \"#084c97\",\n  \"General merchandise stores\" = \"#084c97\",\n  \"Other transportation and support activities\" = \"#555555\",\n  \"Finance and insurance\" = \"#555555\",\n  \"Real estate and rental and leasing\" = \"#555555\",\n  \"Truck transportation\" = \"#555555\",\n  \"Government\" = \"#555555\",\n  \"Federal Government\" = \"#555555\",\n  \"State and local government\"= \"#555555\",\n  \"Other\" = \"#555555\",\n  \"Utilities\" =  \"#555555\",\n  \"Arts, entertainment, recreation, accommodation, and food services\" = \"#555555\",\n  \"Construction\" = \"#555555\")\n\n\n\n\n\n\nde_palette2&lt;- c(\n  \"#5E77AA\",    # Lighter Purple\n  \"#084C97\",   # Original Purple\n  \"#A2D4D1\",   # Lighter Blue\n  \"#78C2AD\",   # Original Blue\n  \"#C2D987\",   # Lighter Green\n  \"#DBE55F\",   # Original Green\n  \"#F279B2\",   # Lighter Pink\n  \"#FF2F88\"    # Original Pink\n)\n\nsource_annotation &lt;- \"&lt;a href='https://apps.bea.gov/scb/issues/2023/12-december/1223-digital-economy.htm' target='_blank' style='font-size: 8px;'&gt;Source: U.S. Digital Economy: New & Revised Estimates, 2017–2022, the Bureau of Economic Analysis&lt;/a&gt;\""
  },
  {
    "objectID": "viz_drafts.html#introduction",
    "href": "viz_drafts.html#introduction",
    "title": "Data Explore",
    "section": "",
    "text": "[BLAH BLAH BLAH]\n\n\nShow the code\nlibrary(treemap) # create a basic treemap\nlibrary(d3treeR) # html tree mao\nlibrary(htmlwidgets)\nlibrary(plotly) # dynamic graphs\nlibrary(tidyverse) # data wrangling\nlibrary(readxl) # file reading\n\n\n# import data\nDE22 &lt;- read_excel(\"docs/DE22.xlsx\")\n\n# wrangle the data\nDE22 &lt;-  DE22 %&gt;% \n  mutate(Value = as.numeric(Value))\n\n\nde_palette0&lt;- c(\n  \"#F279B2\", # eCommerce\n  \"#C2D987\", #infrastructure \n  \"#084C97\")  # Printed digital serivces\n\n\nde_palette &lt;- c(\n  \"Digital Economy\" = \"#555555\",\n  \"Priced Digital Services\" = \"#084c97\",\n  \"Infrastructure\" = \"#DBE55F\",\n  \"E-Commerce\" = \"#FF2f88\",\n  \"Federal Nondefense Digital Services\" = \"#F66A4E\")\n\n\n# there is probably a better way to do this, but automation was failing me\nde_palette1 &lt;- c(\n  \"Professional and business services\" = \"#78C2AD\",\n  \"Administrative and waste management services\" = \"#78C2AD\",\n  \"Computer systems design and related services\" = \"#78C2AD\",\n  \"Miscellaneous professional, scientific, and technical services\" = \"#78C2AD\",\n  \"Educational services, health care, and social assistance\" = \"#78C2AD\",\n  \"Educational services\" = \"#78C2AD\",\n  \"Management of companies and enterprises\" = \"#78C2AD\",\n  \"Finance, insurance, real estate, rental, and leasing\" = \"#5E77AA\",\n  \"Information\" = \"#FF2f88\",\n  \"Broadcasting and telecommunications\" = \"#FF2f88\",\n  \"Data processing, internet publishing, and other information services\" = \"#FF2f88\",\n  \"Publishing industries, except internet (includes software)\" = \"#FF2f88\",\n  \"Motion picture and sound recording industries\" = \"#FF2f88\",\n  \"Transportation and warehousing\" = \"#F279B2\",\n  \"Wholesale trade\" = \"#DBE55F\",\n  \"Manufacturing\" = \"#F66A4E\",\n  \"Computer and electronic products\" = \"#F66A4E\",\n  \"Other durable goods\" = \"#F66A4E\",\n  \"Nondurable goods\"= \"#F66A4E\",\n  \"Retail Trade\" = \"#084c97\",\n  \"Other retail\" = \"#084c97\",\n  \"Food and beverage stores\" = \"#084c97\",\n  \"Motor vehicle and parts dealers\" = \"#084c97\",\n  \"General merchandise stores\" = \"#084c97\",\n  \"Other transportation and support activities\" = \"#555555\",\n  \"Finance and insurance\" = \"#555555\",\n  \"Real estate and rental and leasing\" = \"#555555\",\n  \"Truck transportation\" = \"#555555\",\n  \"Government\" = \"#555555\",\n  \"Federal Government\" = \"#555555\",\n  \"State and local government\"= \"#555555\",\n  \"Other\" = \"#555555\",\n  \"Utilities\" =  \"#555555\",\n  \"Arts, entertainment, recreation, accommodation, and food services\" = \"#555555\",\n  \"Construction\" = \"#555555\")\n\n\n\n\n\n\nde_palette2&lt;- c(\n  \"#5E77AA\",    # Lighter Purple\n  \"#084C97\",   # Original Purple\n  \"#A2D4D1\",   # Lighter Blue\n  \"#78C2AD\",   # Original Blue\n  \"#C2D987\",   # Lighter Green\n  \"#DBE55F\",   # Original Green\n  \"#F279B2\",   # Lighter Pink\n  \"#FF2F88\"    # Original Pink\n)\n\nsource_annotation &lt;- \"&lt;a href='https://apps.bea.gov/scb/issues/2023/12-december/1223-digital-economy.htm' target='_blank' style='font-size: 8px;'&gt;Source: U.S. Digital Economy: New & Revised Estimates, 2017–2022, the Bureau of Economic Analysis&lt;/a&gt;\""
  },
  {
    "objectID": "viz_drafts.html#what-makes-up-the-digital-economy",
    "href": "viz_drafts.html#what-makes-up-the-digital-economy",
    "title": "Data Explore",
    "section": "What makes Up the digital economy?",
    "text": "What makes Up the digital economy?\n\n\nShow the code\n# showing the code but not running it\n# https://rdrr.io/github/timelyportfolio/d3treeR/man/d3tree2.html\n\n# prepare the data for the chart\nreal_value_activity &lt;-  DE22 %&gt;% \n  # remove subtotals\n  filter(!str_detect(MicroAttribute, regex(\"_TOTAL\", ignore_case = TRUE)),\n    Measurement == \"Digital Economy Real Value Added by Activity\", # select measurement\n    Year == \"2022\") %&gt;% \n  select(Category, MicroAttribute, Bil_Dols) %&gt;% \n  mutate( MicroAttribute= sub(\"_.*$\", \"\", MicroAttribute),\n          Bil_dollars = round(Bil_Dols, 1),\n          # the d3 package doesn't allow for extra labels so combine the strings and make own label!\n          MicroAttribute_labels = str_c(MicroAttribute, \", $\", Bil_Dols, \" B\"))\n\n\n\n# create a dynamic tree map\nreal_value &lt;- treemap(real_value_activity,\n    index = c(\"Category\", \"MicroAttribute_labels\"),\n    align.labels=list(\n        c(\"center\", \"top\"), \n        c(\"right\", \"center\")),  \n    vSize = \"Bil_Dols\",\n    type = \"index\",\n    vColor=\"MicroAttribute_labels\",\n    title = \"Digital Economy Real Value Added by Activity\",\n    palette = de_palette0\n  ) # end of treemap options\n\ntree &lt;- d3tree(real_value,\n              width = \"100%\",\n              height = \"600px\",\n              rootname =\"2022 Digital Economy Real Value Added by Activity (US Billions)\")\n\n\n\nsaveWidget(tree, file = \"TreePlot.html\", selfcontained = T)\n\n\n\n\n\n\n\n\n[ add context here!]"
  },
  {
    "objectID": "viz_drafts.html#how-has-the-digital-economy-changed-over-time",
    "href": "viz_drafts.html#how-has-the-digital-economy-changed-over-time",
    "title": "Data Explore",
    "section": "How has the digital economy changed over time?",
    "text": "How has the digital economy changed over time?\n\n\n\n\n\n\nHow Has the Digital Market Changed Over Time?\n\n\nShow the code\nde_time &lt;-  DE22 %&gt;%\n  filter(!str_detect(MicroAttribute, regex(\"total\", ignore_case = TRUE))) %&gt;% \n  filter(Measurement == \"Real Digital Economy Gross Output by Activity\") %&gt;% \n  group_by(Category, year) %&gt;% \n    summarise(`Dollars in Billions` = sum(Mil_Dols) / 100)\n\n\n`summarise()` has grouped output by 'Category'. You can override using the\n`.groups` argument.\n\n\nShow the code\n# ggplot(\n#   data = de_time,\n#   mapping = aes(x = year, y = `Dollars in Millions`, fill = Category) \n# ) +\n# geom_area(colour = \"black\", size = 0.2, alpha = 0.8)"
  },
  {
    "objectID": "viz_drafts.html#how-has-the-digital-market-changed-over-time",
    "href": "viz_drafts.html#how-has-the-digital-market-changed-over-time",
    "title": "Data Explore",
    "section": "How has the digital market changed over time?",
    "text": "How has the digital market changed over time?\n\nReal Digital Economy Gross Output by Activity:\n\n\nShow the code\n# https://plotly.com/r/styling-figures/\nde_time &lt;-  DE22 %&gt;%\n  filter(str_detect(MicroAttribute, regex(\"_TOTAL\", ignore_case = TRUE))) %&gt;% \n  filter(Measurement == \"Real Digital Economy Gross Output by Activity\") %&gt;% \n  group_by(Category, Year) %&gt;% \n    summarise(Bil_Dols= sum(Bil_Dols))\n\n# create factors so the legend is in order of largest to smallest\nde_time$Category &lt;- factor(de_time$Category,\n                          levels = c(\n                            \"Federal Nondefense Digital Services\",\n                            \"E-Commerce\",\n                            \"Infrastructure\",\n                            \"Priced Digital Services\",\n                            \"Digital Economy\"))\n\ngross_output_plot &lt;- plot_ly(de_time, \n                x = ~Year, \n                y = ~Bil_Dols,\n                color = ~Category, # Use color for different categories\n                colors = de_palette,\n                marker = list(sizeref = 8), \n                line = list(width = 2),\n                fill =  \"tonexty\") %&gt;% # allows colors to stack without colors overlapping\n  \n  add_trace(\n    type = \"scatter\",\n    mode = \"lines+markers\",   \n    text = ~ifelse(\n      Year == 2022,\n        paste( # show five year growth for 2022 data points\n          \"Five Year Growth: +\",\n          scales::percent((Bil_Dols[Year == 2022] - Bil_Dols[Year == 2017]) / Bil_Dols[Year == 2017]),\n          \"&lt;br&gt;Year: \", Year,\n          \"&lt;br&gt;Category: \", Category,\n          \"&lt;br&gt;$\", formatC(Bil_Dols, big.mark = \",\", format = \"f\", digits = 1), \"B\",\n          \"&lt;br&gt;% of Digital Economy: \",\n          scales::percent((Bil_Dols /Bil_Dols[Category == \"Digital Economy\"]), accuracy = 1L)\n      ),  \n\n        paste( # else\n          \"&lt;b&gt;Year&lt;/b&gt;: \", Year,\n          \"&lt;br&gt;&lt;b&gt;Category&lt;/b&gt;: \", Category,\n          \"&lt;br&gt;$\", formatC(Bil_Dols, big.mark = \",\", format = \"f\", digits = 1), \"B\",\n          \"&lt;br&gt;&lt;b&gt;% of Digital Economy&lt;/b&gt;: \",\n          scales::percent((Bil_Dols /Bil_Dols[Category == \"Digital Economy\"]), accuracy = 1L))          \n          ),\n        hoverinfo = 'text') %&gt;% \n\n  layout(\n    margin = list(l=100, r=50, b=50, t=50, pad=10),\n    legend =  list(title= \"Real Digital Economy Gross Output by Activity\",\n      x = 0.0,\n      y = 1.3),\n    yaxis = list(title = \"$Billions\", showgrid = FALSE, tickformat = \",\"),\n    xaxis = list (showgrid = FALSE))\n\ngross_output_plot\n\n\n\n\n\n\n[WORDs]\n/b"
  },
  {
    "objectID": "viz_drafts.html#employment",
    "href": "viz_drafts.html#employment",
    "title": "Data Explore",
    "section": "employment",
    "text": "employment\n\n\nShow the code\nde_employment &lt;-  DE22 %&gt;%\n  filter(\n    !str_detect(MicroAttribute, regex(\"_TOTAL\", ignore_case = TRUE)),     \n    Measurement == \"Digital Economy Employment by Industry\",\n         Year == 2022,\n         Value &gt; 0) %&gt;% \n  mutate(\n      Subcategory = str_remove(Subcategory, \"_SC\"),\n      Attribute = str_remove(Attribute, \"_A\"),\n      SubAttribute = str_remove(SubAttribute, \"_SA\"),\n      Subcategory_Wrapped = case_when( # shorten titles on the x-axis and create groupings to reduce clutter\n      Subcategory == \"Durable goods\" ~ \"Professional & Business Services\",\n      Subcategory == \"Professional and business services\" ~ \"Prof. & Bus. Services\",\n      Subcategory == \"Wholesale trade\" ~ \"Wholesale Trade\",\n      Subcategory == \"Transportation and warehousing\" ~ \"Other\",     \n      Subcategory == \"Government\" ~ \"Other\",      \n      Subcategory == \"Finance, insurance, real estate, rental, and leasing\" ~ \"Other\",  \n      Subcategory == \"Construction\" ~ \"Other\", \n      Subcategory == \"Utilities\" ~ \"Other\", \n      Subcategory == \"Arts, entertainment, recreation, accommodation, and food services\" ~ \"Other\", TRUE ~ Subcategory)) %&gt;%\n  group_by(Subcategory, SubAttribute, Subcategory_Wrapped) %&gt;% \n  summarise(Total_Employees = sum(Value))\n\n\n# create factors to the bars are arranged largest to shortest\nde_employment$Subcategory_Wrapped &lt;- factor(de_employment$Subcategory_Wrapped,\n                                    levels = c(\n                                      \"Prof. & Bus. Services\",\n                                      \"Wholesale Trade\",\n                                      \"Information\",\n                                      \"Manufacturing\",\n                                      \"Retail Trade\",\n                                      \"Other\"))\n\n # this sorts so the stacks will look pretty and orderd. SMH\nSA_Factors &lt;-  de_employment %&gt;%\n  group_by(SubAttribute) %&gt;%\n  summarise(Value = sum(Total_Employees)) %&gt;%\n  arrange(desc(Value))\n\n\nde_employment$SubAttribute_factors &lt;- factor(\n  de_employment$SubAttribute,\n  levels = c(SA_Factors$SubAttribute))\n\n\nemploy_plot &lt;- plot_ly(\n  de_employment,\n  x = ~Subcategory_Wrapped,\n  y = ~Total_Employees,\n  color = ~SubAttribute_factors,\n  colors = ~de_palette1,\n  textposition = \"none\")%&gt;% \n\nadd_trace(\n  type = \"bar\",\n  text = ~paste(\n    \"&lt;b&gt;Employees:&lt;/b&gt;\",\n    formatC(Total_Employees, big.mark = \",\", format = \"f\", digits = 0), \"K\",\n    \"&lt;br&gt;&lt;b&gt;Category:&lt;/b&gt;\", Subcategory, \n    \"&lt;br&gt;&lt;b&gt;Industry:&lt;/b&gt;\", SubAttribute), \n    marker = list(\n    line = list(\n      width = .5,\n      color = \"white\" )),\n  hoverinfo = 'text') %&gt;% \n\n  layout(\n    showlegend = FALSE,\n    margin = list(l=100, r=50, b=50, t=50, pad=10),\n    xaxis = list(title = \"\"),\n    yaxis = list(title = \"Full & Part-Time Employees (Thousands)\", showgrid = FALSE, tickformat = \",\"),\n    barmode = 'stack' )\nemploy_plot"
  }
]