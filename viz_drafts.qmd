---
title: "Data Explore"
---

## Introduction

\[BLAH BLAH BLAH\]

```{r Setup environment, message=FALSE, warning=FALSE}

library(treemap) # create a basic treemap
library(d3treeR) # html tree mao
library(htmlwidgets)
library(plotly) # dynamic graphs
library(tidyverse) # data wrangling
library(readxl) # file reading


# import data
DE22 <- read_excel("docs/DE22.xlsx")

# wrangle the data
DE22 <-  DE22 %>% 
  mutate(Value = as.numeric(Value))


de_palette0<- c(
  "#F279B2", # eCommerce
  "#C2D987", #infrastructure 
  "#084C97")  # Printed digital serivces


de_palette <- c(
  "Digital Economy" = "#555555",
  "Priced Digital Services" = "#084c97",
  "Infrastructure" = "#DBE55F",
  "E-Commerce" = "#FF2f88",
  "Federal Nondefense Digital Services" = "#F66A4E")



de_palette1 <- c(
    "Professional and business services" = "#78C2AD",
    "Computer systems design and related services"= "#78C2AD",
    "Miscellaneous professional, scientific, and technical services"="#78C2AD",
    "Educational services, health care, and social assistance"="#78C2AD",
    "Educational services"="#78C2AD",
    "Management of companies and enterprises"="#78C2AD",
    "Finance, insurance, real estate, rental, and leasing" = "#5E77AA",
    "Government" = "#F66A4E",
    "Information" = "#FF2f88",
    "Broadcasting and telecommunications" = "#FF2f88",
    "Data processing, internet publishing, and other information services"= "#FF2f88",
    "Publishing industries, except internet (includes software)"  = "#FF2f88",
    "Motion picture and sound recording industries" = "#FF2f88",
    "Other" = "#555555", 
    "Arts, entertainment, recreation, accommodation, and food services" = "#555555" ,
    "Construction" = "#555555",
    "Transportation and warehousing" = "#F279B2",
    "Wholesale trade" = "#C2D987",
    "Manufacturing" = "#DBE55F",
    "Computer and electronic products" = "#DBE55F",
    "Retail Trade" = "#084c97",
    "Other retail"= "#084c97",
    "Food and beverage stores" = "#084c97",
    "Motor vehicle and parts dealers"= "#084c97",
    "Utilities" = "#92B7D5"
)



de_palette1 <- c(
  "Professional and business services" = "#78C2AD",
  "Computer systems design and related services" = "#78C2AD",
  "Miscellaneous professional, scientific, and technical services" = "#78C2AD",
  "Educational services, health care, and social assistance" = "#78C2AD",
  "Educational services" = "#78C2AD",
  "Management of companies and enterprises" = "#78C2AD",
  "Finance, insurance, real estate, rental, and leasing" = "#5E77AA",
  "Government" = "#F66A4E",
  "Information" = "#FF2f88",
  "Broadcasting and telecommunications" = "#FF2f88",
  "Data processing, internet publishing, and other information services" = "#FF2f88",
  "Publishing industries, except internet (includes software)" = "#FF2f88",
  "Motion picture and sound recording industries" = "#FF2f88",
  "Other" = "#555555",
  "Arts, entertainment, recreation, accommodation, and food services" = "#555555",
  "Construction" = "#555555",
  "Transportation and warehousing" = "#F279B2",
  "Wholesale trade" = "#C2D987",
  "Manufacturing" = "#DBE55F",
  "Computer and electronic products" = "#DBE55F",
  "Retail Trade" = "#084c97",
  "Other retail" = "#084c97",
  "Food and beverage stores" = "#084c97",
  "Motor vehicle and parts dealers" = "#084c97",
  "Utilities" = "#92B7D5",
  "Wood products" = "#555555",
  "Nonmetallic mineral products" = "#555555",
  "Primary metals" = "#555555",
  "Fabricated metal products" = "#555555",
  "Machinery" = "#555555",
  "Electrical equipment, appliances, and components" = "#555555",
  "Motor vehicles, bodies and trailers, and parts" = "#555555",
  "Other transportation equipment" = "#555555",
  "Furniture and related products" = "#555555",
  "Miscellaneous manufacturing" = "#555555",
  "Nondurable goods" = "#555555",
  "General merchandise stores" = "#555555",
  "Air transportation" = "#555555",
  "Truck transportation" = "#555555",
  "Other transportation and support activities" = "#555555",
  "Warehousing and storage" = "#555555",
  "Federal Reserve banks, credit intermediation, and related activities" = "#555555",
  "Securities, commodity contracts, and investments" = "#555555",
  "Insurance carriers and related activities" = "#555555",
  "Real estate" = "#555555",
  "Rental and leasing services and lessors of intangible assets" = "#555555",
  "Legal services" = "#555555",
  "Administrative and waste management services" = "#555555",
  "National defense" = "#555555",
  "Nondefense" = "#555555",
  "Government enterprises" = "#555555",
  "General government" = "#555555",
  "Arts, entertainment, and recreation" = "#555555",
  "Accommodation and food service" = "#555555"
)






de_palette2<- c(
  "#5E77AA",    # Lighter Purple
  "#084C97",   # Original Purple
  "#A2D4D1",   # Lighter Blue
  "#78C2AD",   # Original Blue
  "#C2D987",   # Lighter Green
  "#DBE55F",   # Original Green
  "#F279B2",   # Lighter Pink
  "#FF2F88"    # Original Pink
)

source_annotation <- "<a href='https://apps.bea.gov/scb/issues/2023/12-december/1223-digital-economy.htm' target='_blank' style='font-size: 8px;'>Source: U.S. Digital Economy: New & Revised Estimates, 2017â€“2022, the Bureau of Economic Analysis</a>"
```

## What makes Up the digital economy?

```{r eval=FALSE}
# showing the code but not running it
# https://rdrr.io/github/timelyportfolio/d3treeR/man/d3tree2.html

# prepare the data for the chart
real_value_activity <-  DE22 %>% 
  # remove subtotals
  filter(!str_detect(MicroAttribute, regex("_TOTAL", ignore_case = TRUE)),
    Measurement == "Digital Economy Real Value Added by Activity", # select measurement
    Year == "2022") %>% 
  select(Category, MicroAttribute, Bil_Dols) %>% 
  mutate( MicroAttribute= sub("_.*$", "", MicroAttribute),
          Bil_dollars = round(Bil_Dols, 1),
          # the d3 package doesn't allow for extra labels so combine the strings and make own label!
          MicroAttribute_labels = str_c(MicroAttribute, ", $", Bil_Dols, " B"))



# create a dynamic tree map
real_value <- treemap(real_value_activity,
    index = c("Category", "MicroAttribute_labels"),
    align.labels=list(
        c("center", "top"), 
        c("right", "center")),  
    vSize = "Bil_Dols",
    type = "index",
    vColor="MicroAttribute_labels",
    title = "Digital Economy Real Value Added by Activity",
    palette = de_palette0
  ) # end of treemap options

tree <- d3tree(real_value,
              width = "100%",
              height = "600px",
              rootname ="2022 Digital Economy Real Value Added by Activity (US Billions)")



saveWidget(tree, file = "TreePlot.html", selfcontained = T)
```

```{r include=FALSE}
# running the code but not showing it
# https://rdrr.io/github/timelyportfolio/d3treeR/man/d3tree2.html

# prepare the data for the chart
real_value_activity <-  DE22 %>% 
  # remove subtotals
  filter(!str_detect(MicroAttribute, regex("_TOTAL", ignore_case = TRUE)),
    Measurement == "Digital Economy Real Value Added by Activity", # select measurement
    Year == "2022") %>% 
  select(Category, MicroAttribute, Bil_Dols) %>% 
  mutate( MicroAttribute= sub("_.*$", "", MicroAttribute),
          Bil_dollars = round(Bil_Dols, 1),
          # the d3 package doesn't allow for extra labels so combine the strings and make own label!
          MicroAttribute_labels = str_c(MicroAttribute, ", $", Bil_Dols, " B"))



# create a dynamic tree map
real_value <- treemap(real_value_activity,
    index = c("Category", "MicroAttribute_labels"),
    align.labels=list(
        c("center", "top"), 
        c("right", "center")),  
    vSize = "Bil_Dols",
    type = "index",
    vColor="MicroAttribute_labels",
    title = "Digital Economy Real Value Added by Activity",
    palette = de_palette0
  ) # end of treemap options

tree <- d3tree(real_value,
              width = "100%",
              height = "600px",
              rootname ="2022 Digital Economy Real Value Added by Activity (US Billions)",
              )



saveWidget(tree, file = "TreePlot.html", selfcontained = T)
```

```{r echo=FALSE}
tree
```

\[ add context here!\]

## How has the digital market changed over time?

### Real Digital Economy Gross Output by Activity:

```{r echo=TRUE, message=FALSE, warning=FALSE, paged.print=TRUE}
# https://plotly.com/r/styling-figures/
de_time <-  DE22 %>%
  filter(str_detect(MicroAttribute, regex("_TOTAL", ignore_case = TRUE))) %>% 
  filter(Measurement == "Real Digital Economy Gross Output by Activity") %>% 
  group_by(Category, Year) %>% 
    summarise(Bil_Dols= sum(Bil_Dols))

# create factors so the legend is in order of largest to smallest
de_time$Category <- factor(de_time$Category,
                          levels = c(
                            "Federal Nondefense Digital Services",
                            "E-Commerce",
                            "Infrastructure",
                            "Priced Digital Services",
                            "Digital Economy"))

gross_output_plot <- plot_ly(de_time, 
                x = ~Year, 
                y = ~Bil_Dols,
                color = ~Category, # Use color for different categories
                colors = de_palette,
                marker = list(sizeref = 8), 
                line = list(width = 2),
                fill =  "tonexty") %>% # allows colors to stack without colors overlapping
  
  add_trace(
    type = "scatter",
    mode = "lines+markers",   
    text = ~ifelse(
      Year == 2022,
        paste( # show five year growth for 2022 data points
          "Five Year Growth: +",
          scales::percent((Bil_Dols[Year == 2022] - Bil_Dols[Year == 2017]) / Bil_Dols[Year == 2017]),
          "<br>Year: ", Year,
          "<br>Category: ", Category,
          "<br>$", formatC(Bil_Dols, big.mark = ",", format = "f", digits = 1), "B",
          "<br>% of Digital Economy: ",
          scales::percent((Bil_Dols /Bil_Dols[Category == "Digital Economy"]), accuracy = 1L)
      ),  

        paste( # else
          "<b>Year</b>: ", Year,
          "<br><b>Category</b>: ", Category,
          "<br>$", formatC(Bil_Dols, big.mark = ",", format = "f", digits = 1), "B",
          "<br><b>% of Digital Economy</b>: ",
          scales::percent((Bil_Dols /Bil_Dols[Category == "Digital Economy"]), accuracy = 1L))          
          ),
        hoverinfo = 'text') %>% 

  layout(
    margin = list(l=100, r=50, b=50, t=50, pad=10),
    legend =  list(title= "Real Digital Economy Gross Output by Activity",
      x = 0.0,
      y = 1.3),
    yaxis = list(title = "$Billions", showgrid = FALSE, tickformat = ","),
    xaxis = list (title = 'Year',showgrid = FALSE))

gross_output_plot
```

\[WORDs\]

`/b`

```{r message=TRUE,echo=FALSE, warning=FALSE}
de_employment <-  DE22 %>%
  filter(
    !str_detect(MicroAttribute, regex("_TOTAL", ignore_case = TRUE)),     
    Measurement == "Digital Economy Employment by Industry",
         Year == 2022,
         Value > 0) %>% 
  mutate(
      Subcategory = str_remove(Subcategory, "_SC"),
      Attribute = str_remove(Attribute, "_A"),
      SubAttribute = str_remove(SubAttribute, "_SA"),
      Subcategory_Wrapped = case_when( # shorten titles on the x-ax
      Subcategory == "Professional and business services" ~ "Professional & Business Services",
      Subcategory == "Wholesale trade" ~ "Wholesale Trade",
      Subcategory == "Transportation and warehousing" ~ "Other",     
      Subcategory == "Government" ~ "Other",      
      Subcategory == "Finance, insurance, real estate, rental, and leasing" ~ "Other",  
      Subcategory == "Utilities" ~ "Other", 
      Subcategory == "Arts, entertainment, recreation, accommodation, and food services" ~ "Other", TRUE ~ Subcategory)) %>%
  select(-Bil_Dols, Value_Type)


# create factors to the bars are arranged largest to shortest
de_employment$Subcategory_Wrapped <- factor(de_employment$Subcategory_Wrapped,
                                    levels = c(
                                      "Professional & Business Services",
                                      "Wholesale Trade",
                                      "Information",
                                      "Manufacturing",
                                      "Retail Trade",
                                      "Other"))

#  this sorts so the stacks will look pretty and orderd. SMH
# SA_Factors <-  de_employment %>%  
#   group_by(SubAttribute) %>% 
#   summarise(Value = sum(Value)) %>% 
#   arrange(desc(Value))
# 
de_employment$SubAttribute <- factor(
  de_employment$SubAttribute,
  levels = c( # doing this manually because the grouping didnt work
"Computer systems design and related services",
"Wholesale trade",
"Broadcasting and telecommunications",
"Computer and electronic products",
"Publishing industries, except internet (includes software)",
"Data processing, internet publishing, and other information services",
"Other retail",
"Miscellaneous professional, scientific, and technical services",
"Motion picture and sound recording industries",
"Educational services",
"Food and beverage stores",
"Motor vehicle and parts dealers",
"Management of companies and enterprises",
"Truck transportation",
"Machinery",
"General government",
"Electrical equipment, appliances, and components",
"Educational services, health care, and social assistance",
"Nondurable goods",
"General merchandise stores",
"Nondefense",
"Miscellaneous manufacturing",
"Insurance carriers and related activities",
"Federal Reserve banks, credit intermediation, and related activities",
"National defense",
"Accommodation and food services",
"Fabricated metal products",
"Motor vehicles, bodies and trailers, and parts",
"Air transportation",
"Arts, entertainment, and recreation",
"Warehousing and storage",
"Other transportation and support activities",
"Other transportation equipment",
"Securities, commodity contracts, and investments",
"Construction",
"Furniture and related products",
"Government enterprises",
"Legal services",
"Nonmetallic mineral products",
"Primary metals",
"Real estate",
"Rental and leasing services and lessors of intangible assets",
"Utilities",
"Wood products" ))





employ_plot <- plot_ly(
  de_employment,
  x = ~Subcategory_Wrapped,
  y = ~Value,
  color = ~SubAttribute,
  colors = ~de_palette1,
  textposition = "none")%>% 

add_trace(
  type = "bar",
  text = ~paste(
    "<b>Employees:</b>",
    formatC(Value, big.mark = ",", format = "f", digits = 0), "K",
    "<br><b>Category:</b>", Subcategory, 
    "<br><b>Industry:</b>", SubAttribute), 
    marker = list(
    line = list(
      width = .5,
      color = "white" )),
  hoverinfo = 'text') %>% 

  layout(
    showlegend = FALSE,
    xaxis = list(title = ""),
    yaxis = list(title = "Full & Part-Time Employees (Thousands)", showgrid = FALSE, tickformat = ","),
    barmode = 'stack' )
employ_plot



```

