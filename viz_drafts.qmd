---
title: "Data Explore"
---

## Introduction

\[BLAH BLAH BLAH\]

```{r Setup environment, message=FALSE, warning=FALSE}

library(treemap) # create a basic treemap
library(d3treeR) # html tree mao
library(htmlwidgets)
library(plotly) # dynamic graphs
library(tidyverse) # data wrangling
library(readxl) # file reading


# import data
DE22 <- read_excel("docs/DE22.xlsx")

# wrangle the data
DE22 <-  DE22 %>% 
  mutate(Value = as.numeric(Value))


de_palette0<- c(
  "#F279B2", # eCommerce
  "#C2D987", #infrastructure 
  "#084C97")  # Printed digital serivces


de_palette <- c(
  "Digital Economy" = "#555555",
  "Priced Digital Services" = "#084c97",
  "Infrastructure" = "#DBE55F",
  "E-Commerce" = "#FF2f88",
  "Federal Nondefense Digital Services" = "#F66A4E")


# there is probably a better way to do this, but automation was failing me
de_palette1 <- c(
  "Professional and business services" = "#78C2AD",
  "Administrative and waste management services" = "#78C2AD",
  "Computer systems design and related services" = "#78C2AD",
  "Miscellaneous professional, scientific, and technical services" = "#78C2AD",
  "Educational services, health care, and social assistance" = "#78C2AD",
  "Educational services" = "#78C2AD",
  "Management of companies and enterprises" = "#78C2AD",
  "Finance, insurance, real estate, rental, and leasing" = "#5E77AA",
  "Information" = "#FF2f88",
  "Broadcasting and telecommunications" = "#FF2f88",
  "Data processing, internet publishing, and other information services" = "#FF2f88",
  "Publishing industries, except internet (includes software)" = "#FF2f88",
  "Motion picture and sound recording industries" = "#FF2f88",
  "Transportation and warehousing" = "#F279B2",
  "Wholesale trade" = "#DBE55F",
  "Manufacturing" = "#F66A4E",
  "Computer and electronic products" = "#F66A4E",
  "Other durable goods" = "#F66A4E",
  "Nondurable goods"= "#F66A4E",
  "Retail Trade" = "#084c97",
  "Other retail" = "#084c97",
  "Food and beverage stores" = "#084c97",
  "Motor vehicle and parts dealers" = "#084c97",
  "General merchandise stores" = "#084c97",
  "Other transportation and support activities" = "#555555",
  "Finance and insurance" = "#555555",
  "Real estate and rental and leasing" = "#555555",
  "Truck transportation" = "#555555",
  "Government" = "#555555",
  "Federal Government" = "#555555",
  "State and local government"= "#555555",
  "Other" = "#555555",
  "Utilities" =  "#555555",
  "Arts, entertainment, recreation, accommodation, and food services" = "#555555",
  "Construction" = "#555555")






de_palette2<- c(
  "#5E77AA",    # Lighter Purple
  "#084C97",   # Original Purple
  "#A2D4D1",   # Lighter Blue
  "#78C2AD",   # Original Blue
  "#C2D987",   # Lighter Green
  "#DBE55F",   # Original Green
  "#F279B2",   # Lighter Pink
  "#FF2F88"    # Original Pink
)

source_annotation <- "<a href='https://apps.bea.gov/scb/issues/2023/12-december/1223-digital-economy.htm' target='_blank' style='font-size: 8px;'>Source: U.S. Digital Economy: New & Revised Estimates, 2017â€“2022, the Bureau of Economic Analysis</a>"
```

## What makes Up the digital economy?

```{r eval=FALSE}
# showing the code but not running it
# https://rdrr.io/github/timelyportfolio/d3treeR/man/d3tree2.html

# prepare the data for the chart
real_value_activity <-  DE22 %>% 
  # remove subtotals
  filter(!str_detect(MicroAttribute, regex("_TOTAL", ignore_case = TRUE)),
    Measurement == "Digital Economy Real Value Added by Activity", # select measurement
    Year == "2022") %>% 
  select(Category, MicroAttribute, Bil_Dols) %>% 
  mutate( MicroAttribute= sub("_.*$", "", MicroAttribute),
          Bil_dollars = round(Bil_Dols, 1),
          # the d3 package doesn't allow for extra labels so combine the strings and make own label!
          MicroAttribute_labels = str_c(MicroAttribute, ", $", Bil_Dols, " B"))



# create a dynamic tree map
real_value <- treemap(real_value_activity,
    index = c("Category", "MicroAttribute_labels"),
    align.labels=list(
        c("center", "top"), 
        c("right", "center")),  
    vSize = "Bil_Dols",
    type = "index",
    vColor="MicroAttribute_labels",
    title = "Digital Economy Real Value Added by Activity",
    palette = de_palette0
  ) # end of treemap options

tree <- d3tree(real_value,
              width = "100%",
              height = "600px",
              rootname ="2022 Digital Economy Real Value Added by Activity (US Billions)")



saveWidget(tree, file = "TreePlot.html", selfcontained = T)
```

```{r include=FALSE}
# running the code but not showing it
# https://rdrr.io/github/timelyportfolio/d3treeR/man/d3tree2.html

# prepare the data for the chart
real_value_activity <-  DE22 %>% 
  # remove subtotals
  filter(!str_detect(MicroAttribute, regex("_TOTAL", ignore_case = TRUE)),
    Measurement == "Digital Economy Real Value Added by Activity", # select measurement
    Year == "2022") %>% 
  select(Category, MicroAttribute, Bil_Dols) %>% 
  mutate( MicroAttribute= sub("_.*$", "", MicroAttribute),
          Bil_dollars = round(Bil_Dols, 1),
          # the d3 package doesn't allow for extra labels so combine the strings and make own label!
          MicroAttribute_labels = str_c(MicroAttribute, ", $", Bil_Dols, " B"))



# create a dynamic tree map
real_value <- treemap(real_value_activity,
    index = c("Category", "MicroAttribute_labels"),
    align.labels=list(
        c("center", "top"), 
        c("right", "center")),  
    vSize = "Bil_Dols",
    type = "index",
    vColor="MicroAttribute_labels",
    title = "Digital Economy Real Value Added by Activity",
    palette = de_palette0
  ) # end of treemap options

tree <- d3tree(real_value,
              width = "100%",
              height = "600px",
              rootname ="2022 Digital Economy Real Value Added by Activity (US Billions)",
              )



saveWidget(tree, file = "TreePlot.html", selfcontained = T)
```

```{r echo=FALSE}
tree
```

\[ add context here!\]

## How has the digital market changed over time?

### Real Digital Economy Gross Output by Activity:

```{r echo=TRUE, message=FALSE, warning=FALSE, paged.print=TRUE}
# https://plotly.com/r/styling-figures/
de_time <-  DE22 %>%
  filter(str_detect(MicroAttribute, regex("_TOTAL", ignore_case = TRUE))) %>% 
  filter(Measurement == "Real Digital Economy Gross Output by Activity") %>% 
  group_by(Category, Year) %>% 
    summarise(Bil_Dols= sum(Bil_Dols))


# create factors so the legend is in order of largest to smallest
de_time$Category <- factor(de_time$Category,
                          levels = c(
                            "Federal Nondefense Digital Services",
                            "E-Commerce",
                            "Infrastructure",
                            "Priced Digital Services",
                            "Digital Economy"))

gross_output_plot <- plot_ly(de_time, 
                x = ~Year, 
                y = ~Bil_Dols,
                color = ~Category, # Use color for different categories
                colors = de_palette,
                marker = list(sizeref = 8), 
                line = list(width = 2),
                fill = "tonexty") %>% 
  
  add_trace(
    type = "scatter",
    mode = "lines+markers",   
    text = ~ifelse(
      Year == 2022,
        paste( # show five year growth for 2022 data points
          "Five Year Growth: +",
          scales::percent((Bil_Dols[Year == 2022] - Bil_Dols[Year == 2017]) / Bil_Dols[Year == 2017]),
          "<br>Year: ", Year,
          "<br>Category: ", Category,
          "<br>$", formatC(Bil_Dols, big.mark = ",", format = "f", digits = 1), "B",
          "<br>% of Digital Economy: ",
          scales::percent((Bil_Dols /Bil_Dols[Category == "Digital Economy"]), accuracy = 1L)
      ),  

        paste( # else
          "<b>Year</b>: ", Year,
          "<br><b>Category</b>: ", Category,
          "<br>$", formatC(Bil_Dols, big.mark = ",", format = "f", digits = 1), "B",
          "<br><b>% of Digital Economy</b>: ",
          scales::percent((Bil_Dols /Bil_Dols[Category == "Digital Economy"]), accuracy = 1L))          
          ),
        hoverinfo = 'text') %>% 

  layout(
    margin = list(l=100, r=50, b=50, t=50, pad=10),
    legend =  list(title= "Real Digital Economy Gross Output by Activity",
      x = 0.0,
      y = 1.3),
    yaxis = list(title = "$Billions", showgrid = FALSE, tickformat = ","),
    xaxis = list (showgrid = FALSE))

gross_output_plot
```

\[WORDs\]

`/b`

## employment

```{r echo=TRUE, message=FALSE, warning=FALSE, paged.print=TRUE}
de_employment <-  DE22 %>%
  filter(
    !str_detect(MicroAttribute, regex("_TOTAL", ignore_case = TRUE)),     
    Measurement == "Digital Economy Employment by Industry",
         Year == 2022,
         Value > 0) %>% 
  mutate(
      Subcategory = str_remove(Subcategory, "_SC"),
      Attribute = str_remove(Attribute, "_A"),
      SubAttribute = str_remove(SubAttribute, "_SA"),
      Subcategory_Wrapped = case_when( # shorten titles on the x-axis and create groupings to reduce clutter
      Subcategory == "Durable goods" ~ "Professional & Business Services",
      Subcategory == "Professional and business services" ~ "Prof. & Bus. Services",
      Subcategory == "Wholesale trade" ~ "Wholesale Trade",
      Subcategory == "Transportation and warehousing" ~ "Other",     
      Subcategory == "Government" ~ "Other",      
      Subcategory == "Finance, insurance, real estate, rental, and leasing" ~ "Other",  
      Subcategory == "Construction" ~ "Other", 
      Subcategory == "Utilities" ~ "Other", 
      Subcategory == "Arts, entertainment, recreation, accommodation, and food services" ~ "Other", TRUE ~ Subcategory)) %>%
  group_by(Subcategory, SubAttribute, Subcategory_Wrapped) %>% 
  summarise(Total_Employees = sum(Value))


# create factors to the bars are arranged largest to shortest
de_employment$Subcategory_Wrapped <- factor(de_employment$Subcategory_Wrapped,
                                    levels = c(
                                      "Prof. & Bus. Services",
                                      "Wholesale Trade",
                                      "Information",
                                      "Manufacturing",
                                      "Retail Trade",
                                      "Other"))

 # this sorts so the stacks will look pretty and orderd. SMH
SA_Factors <-  de_employment %>%
  group_by(SubAttribute) %>%
  summarise(Value = sum(Total_Employees)) %>%
  arrange(desc(Value))


de_employment$SubAttribute_factors <- factor(
  de_employment$SubAttribute,
  levels = c(SA_Factors$SubAttribute))


employ_plot <- plot_ly(
  de_employment,
  x = ~Subcategory_Wrapped,
  y = ~Total_Employees,
  color = ~SubAttribute_factors,
  colors = ~de_palette1,
  textposition = "none")%>% 

add_trace(
  type = "bar",
  text = ~paste(
    "<b>Employees:</b>",
    formatC(Total_Employees, big.mark = ",", format = "f", digits = 0), "K",
    "<br><b>Category:</b>", Subcategory, 
    "<br><b>Industry:</b>", SubAttribute), 
    marker = list(
    line = list(
      width = .5,
      color = "white" )),
  hoverinfo = 'text') %>% 

  layout(
    showlegend = FALSE,
    margin = list(l=100, r=50, b=50, t=50, pad=10),
    xaxis = list(title = ""),
    yaxis = list(title = "Full & Part-Time Employees (Thousands)", showgrid = FALSE, tickformat = ","),
    barmode = 'stack' )
employ_plot
```
